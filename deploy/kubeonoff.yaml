---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeonoff

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kubeonoff-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["list", "get", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "get", "delete"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
- apiGroups: ["apps", "extensions"]
  resources: ["daemonsets"]
  verbs: ["list", "get"]
- apiGroups: ["apps", "extensions"]
  resources: ["replicasets"]
  verbs: ["list", "get"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kubeonoff-binding
subjects:
- kind: ServiceAccount
  name: kubeonoff
roleRef:
  kind: Role
  name: kubeonoff-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Service
metadata:
  name: kubeonoff
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: kubeonoff

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeonoff
  annotations:
    kubeonoff/description: |
      Facilitates starting/stopping of deployments and pods from
      a web interface and HTTP API.
      Powers this very dashboard that you are looking at.
    kubeonoff/important: "true"
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: kubeonoff
  template:
    metadata:
      labels:
        app: kubeonoff
    spec:
      serviceAccountName: kubeonoff
      volumes:
      containers:
      - name: kubeonoff
        image: kubeonoff:0.1
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
